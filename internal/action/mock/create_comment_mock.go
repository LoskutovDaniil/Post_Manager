// Code generated by MockGen. DO NOT EDIT.
// Source: create_comment.go
//
// Generated by this command:
//
//	mockgen -source=create_comment.go -destination=mock/create_comment_mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/LoskutovDaniil/OzonTestTask2024/internal/model"
	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockCreateCommentRepository is a mock of CreateCommentRepository interface.
type MockCreateCommentRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCreateCommentRepositoryMockRecorder
}

// MockCreateCommentRepositoryMockRecorder is the mock recorder for MockCreateCommentRepository.
type MockCreateCommentRepositoryMockRecorder struct {
	mock *MockCreateCommentRepository
}

// NewMockCreateCommentRepository creates a new mock instance.
func NewMockCreateCommentRepository(ctrl *gomock.Controller) *MockCreateCommentRepository {
	mock := &MockCreateCommentRepository{ctrl: ctrl}
	mock.recorder = &MockCreateCommentRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateCommentRepository) EXPECT() *MockCreateCommentRepositoryMockRecorder {
	return m.recorder
}

// CreateComment mocks base method.
func (m *MockCreateCommentRepository) CreateComment(ctx context.Context, comment model.Comment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateComment", ctx, comment)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateComment indicates an expected call of CreateComment.
func (mr *MockCreateCommentRepositoryMockRecorder) CreateComment(ctx, comment any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateComment", reflect.TypeOf((*MockCreateCommentRepository)(nil).CreateComment), ctx, comment)
}

// GetPostByID mocks base method.
func (m *MockCreateCommentRepository) GetPostByID(ctx context.Context, id uuid.UUID) (model.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPostByID", ctx, id)
	ret0, _ := ret[0].(model.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPostByID indicates an expected call of GetPostByID.
func (mr *MockCreateCommentRepositoryMockRecorder) GetPostByID(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPostByID", reflect.TypeOf((*MockCreateCommentRepository)(nil).GetPostByID), ctx, id)
}
