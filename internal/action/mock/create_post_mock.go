// Code generated by MockGen. DO NOT EDIT.
// Source: create_post.go
//
// Generated by this command:
//
//	mockgen -source=create_post.go -destination=mock/create_post_mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/LoskutovDaniil/OzonTestTask2024/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockCreatePostRepository is a mock of CreatePostRepository interface.
type MockCreatePostRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCreatePostRepositoryMockRecorder
}

// MockCreatePostRepositoryMockRecorder is the mock recorder for MockCreatePostRepository.
type MockCreatePostRepositoryMockRecorder struct {
	mock *MockCreatePostRepository
}

// NewMockCreatePostRepository creates a new mock instance.
func NewMockCreatePostRepository(ctrl *gomock.Controller) *MockCreatePostRepository {
	mock := &MockCreatePostRepository{ctrl: ctrl}
	mock.recorder = &MockCreatePostRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreatePostRepository) EXPECT() *MockCreatePostRepositoryMockRecorder {
	return m.recorder
}

// CreatePost mocks base method.
func (m *MockCreatePostRepository) CreatePost(ctx context.Context, post model.Post) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePost", ctx, post)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePost indicates an expected call of CreatePost.
func (mr *MockCreatePostRepositoryMockRecorder) CreatePost(ctx, post any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePost", reflect.TypeOf((*MockCreatePostRepository)(nil).CreatePost), ctx, post)
}
